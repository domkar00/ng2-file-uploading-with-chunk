{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.umd.min.js","webpack:///webpack/bootstrap 20b0892f55c0cf5b0391","webpack:///external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}","webpack:///./src/file-upload/file-uploader.class.ts","webpack:///./src/file-upload/file-like-object.class.ts","webpack:///./src/file-upload/file-select.directive.ts","webpack:///./src/file-upload/file-item.class.ts","webpack:///./src/file-upload/file-drop.directive.ts","webpack:///./src/index.ts","webpack:///./src/file-upload/file-chunk.class.ts","webpack:///./src/file-upload/file-type.class.ts","webpack:///./src/file-upload/file-upload.module.ts","webpack:///external {\"root\":[\"ng\",\"common\"],\"commonjs\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"amd\":\"@angular/common\"}"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_10__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isFile","value","File","core_1","file_like_object_class_1","file_item_class_1","file_type_class_1","FileUploader","options","isUploading","queue","progress","_nextIndex","chunkSize","currentChunkParam","totalChunkParam","chunkMethod","autoUpload","isHTML5","filters","removeAfterUpload","disableMultipart","formatDataFunction","item","_file","formatDataFunctionIsAsync","setOptions","response","EventEmitter","assign","authToken","authTokenHeader","unshift","fn","_queueLimitFilter","maxFileSize","_fileSizeFilter","allowedFileType","_fileTypeFilter","allowedMimeType","_mimeTypeFilter","length","url","addToQueue","files","_this","list","_i","files_1","file","push","arrayOfFilters","_getFilters","count","addedFileItems","map","some","temp","FileLikeObject","_isValidFile","fileItem","FileItem","_onAfterAddingFile","filter","_failFilterIndex","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","removeFromQueue","index","getIndexOfItem","cancel","splice","clearQueue","remove","uploadItem","transport","_prepareToUploading","cancelItem","prop","_xhr","_form","abort","items","getNotUploadedItems","upload","cancelAll","isFileLikeObject","indexOf","isUploaded","getReadyItems","isReady","sort","item1","item2","destroy","onAfterAddingAll","fileItems","onBuildItemForm","form","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","status","headers","onErrorItem","onCancelItem","onCompleteChunk","onCompleteItem","onCompleteAll","type","size","FileType","getMimeClass","_onErrorItem","_onError","_onCompleteChunk","_onCompleteItem","_onComplete","nextItem","_headersGetter","parsedHeaders","toLowerCase","_xhrAppendEvents","xhr","that","onprogress","event","Math","round","lengthComputable","loaded","total","_currentChunk","_totalChunks","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","method","_chunkUploaders","pop","onerror","onabort","_onCancelItem","open","withCredentials","_a","header","setRequestHeader","_b","_c","onreadystatechange","readyState","XMLHttpRequest","DONE","emit","responseText","_buildMultiPartSendable","start","end","sendable","FormData","_onBuildItemForm","getNextChunk","appendFile","append","alias","parametersBeforeFiles","undefined","additionalParameter","keys","forEach","key","paramVal","replace","toString","_xhrTransport","_onBeforeUploadItem","TypeError","chunkSize_1","chunkMethod_1","NUM_CHUNKS","max","ceil","start_1","end_1","_onCompleteChunkCallnext","uploader","send","createFileChunk","setIsUploading","then","result","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names_1","match","queueLimit","every","val","parsed","split","line","slice","trim","_onBeforeUpload","_onBuildForm","_onProgress","_onSuccessItem","_onSuccess","_onCancel","isElement","node","nodeName","attr","find","fileOrInput","rawFile","isInput","fakePathOrObject","_createFromFakePath","path","lastModifiedDate","lastIndexOf","_createFromObject","__decorate","decorators","target","desc","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","k","v","metadata","file_uploader_class_1","FileSelectDirective","element","onFileSelected","getOptions","getFilters","isEmptyAfterSelection","nativeElement","attributes","multiple","onChange","Input","Output","HostListener","Function","Directive","selector","ElementRef","file_chunk_class_1","formData","isSuccess","isCancel","isError","itemAlias","e","fileChunks","FileChunk","byteStepSize","currentChunk","totalChunks","prepareNextChunk","getCurrentRawFileChunk","setUploading","_fileChunks","set","onBeforeUpload","onBuildForm","onProgress","onSuccess","onError","onCancel","onComplete","FileDropDirective","fileOver","onFileDrop","onDrop","transfer","_getTransfer","_preventAndStop","onDragOver","_haveFiles","types","dropEffect","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","__export","file_upload_module_1","FileUploadModule","stepSize","uploadProgress","uploading","uploadComplete","totalSize","startByte","endByte","uniqueIdentifier","totalSent","extraData","setByteStepSize","setRawFile","setUploadProgress","setUploadComplete","setTotalSize","getRawFile","setStartByte","setEndByte","getByteStepSize","setCurrentChunk","getBrowserSliceMethod","setTotalChunks","setUniqueIdenfier","generateUniqueIdentifier","setTotalSent","setExtraData","getExtraData","setProgress","getProgress","getUploading","getUploadComplete","getUploadProgress","getStartByte","getEndByte","getTotalSize","getCurrentChunk","getTotalChunks","getUniqueIdenfier","getRawFileExtension","extension","getRawFileName","getContentType","getTotalSent","retrocedeChunk","mozSlice","webkitSlice","Date","getTime","performance","now","random","floor","mimeClass","mime_psd","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","jpg","jpeg","tif","psd","bmp","png","nef","tiff","cr2","dwg","cdr","ai","indd","pin","cdp","skp","stp","3dm","mp3","wav","wma","mod","m4a","compress","zip","rar","7z","lz","z01","bz2","gz","pdf","xls","xlsx","ods","mp4","avi","wmv","mpg","mts","flv","3gp","vob","m4v","mpeg","m2ts","mov","doc","docx","eps","txt","odt","rtf","ppt","pptx","pps","ppsx","odp","chunks","common_1","file_drop_directive_1","file_select_directive_1","NgModule","imports","CommonModule","declarations"],"mappings":"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","file":"index.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-file-uploading-with-chunk\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ng2-file-uploading-with-chunk\"] = factory(root[\"ng\"][\"core\"], root[\"ng\"][\"common\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-file-uploading-with-chunk\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ng2-file-uploading-with-chunk\"] = factory(root[\"ng\"][\"core\"], root[\"ng\"][\"common\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(0);\r\nvar file_like_object_class_1 = __webpack_require__(2);\r\nvar file_item_class_1 = __webpack_require__(4);\r\nvar file_type_class_1 = __webpack_require__(8);\r\nfunction isFile(value) {\r\n    return (File && value instanceof File);\r\n}\r\nvar FileUploader = /** @class */ (function () {\r\n    function FileUploader(options) {\r\n        this.isUploading = false;\r\n        this.queue = [];\r\n        this.progress = 0;\r\n        this._nextIndex = 0;\r\n        this.chunkSize = null;\r\n        this.currentChunkParam = \"current_chunk\";\r\n        this.totalChunkParam = \"total_chunks\";\r\n        this.chunkMethod = \"PUT\";\r\n        this.options = {\r\n            autoUpload: false,\r\n            isHTML5: true,\r\n            filters: [],\r\n            chunkSize: null,\r\n            currentChunkParam: \"current_chunk\",\r\n            totalChunkParam: \"total_chunks\",\r\n            chunkMethod: \"PUT\",\r\n            removeAfterUpload: false,\r\n            disableMultipart: false,\r\n            formatDataFunction: function (item) { return item._file; },\r\n            formatDataFunctionIsAsync: false\r\n        };\r\n        this.setOptions(options);\r\n        this.response = new core_1.EventEmitter();\r\n    }\r\n    FileUploader.prototype.setOptions = function (options) {\r\n        this.options = Object.assign(this.options, options);\r\n        this.authToken = this.options.authToken;\r\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\r\n        this.autoUpload = this.options.autoUpload;\r\n        this.chunkSize = this.options.chunkSize;\r\n        this.currentChunkParam = this.options.currentChunkParam;\r\n        this.totalChunkParam = this.options.totalChunkParam;\r\n        this.chunkMethod = this.options.chunkMethod;\r\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\r\n        if (this.options.maxFileSize) {\r\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\r\n        }\r\n        if (this.options.allowedFileType) {\r\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\r\n        }\r\n        if (this.options.allowedMimeType) {\r\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\r\n        }\r\n        for (var i = 0; i < this.queue.length; i++) {\r\n            this.queue[i].url = this.options.url;\r\n        }\r\n    };\r\n    FileUploader.prototype.addToQueue = function (files, options, filters) {\r\n        var _this = this;\r\n        var list = [];\r\n        for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\r\n            var file = files_1[_i];\r\n            list.push(file);\r\n        }\r\n        var arrayOfFilters = this._getFilters(filters);\r\n        var count = this.queue.length;\r\n        var addedFileItems = [];\r\n        list.map(function (some) {\r\n            if (!options) {\r\n                options = _this.options;\r\n            }\r\n            var temp = new file_like_object_class_1.FileLikeObject(some);\r\n            if (_this._isValidFile(temp, arrayOfFilters, options)) {\r\n                var fileItem = new file_item_class_1.FileItem(_this, some, options);\r\n                addedFileItems.push(fileItem);\r\n                _this.queue.push(fileItem);\r\n                _this._onAfterAddingFile(fileItem);\r\n            }\r\n            else {\r\n                var filter = arrayOfFilters[_this._failFilterIndex];\r\n                _this._onWhenAddingFileFailed(temp, filter, options);\r\n            }\r\n        });\r\n        if (this.queue.length !== count) {\r\n            this._onAfterAddingAll(addedFileItems);\r\n            this.progress = this._getTotalProgress();\r\n        }\r\n        this._render();\r\n        if (this.options.autoUpload) {\r\n            this.uploadAll();\r\n        }\r\n    };\r\n    FileUploader.prototype.removeFromQueue = function (value) {\r\n        var index = this.getIndexOfItem(value);\r\n        var item = this.queue[index];\r\n        if (item.isUploading) {\r\n            item.cancel();\r\n        }\r\n        this.queue.splice(index, 1);\r\n        this.progress = this._getTotalProgress();\r\n    };\r\n    FileUploader.prototype.clearQueue = function () {\r\n        while (this.queue.length) {\r\n            this.queue[0].remove();\r\n        }\r\n        this.progress = 0;\r\n    };\r\n    FileUploader.prototype.uploadItem = function (value) {\r\n        var index = this.getIndexOfItem(value);\r\n        var item = this.queue[index];\r\n        var transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\r\n        item._prepareToUploading();\r\n        if (this.isUploading) {\r\n            return;\r\n        }\r\n        this.isUploading = true;\r\n        this[transport](item);\r\n    };\r\n    FileUploader.prototype.cancelItem = function (value) {\r\n        var index = this.getIndexOfItem(value);\r\n        var item = this.queue[index];\r\n        var prop = this.options.isHTML5 ? item._xhr : item._form;\r\n        if (item && item.isUploading) {\r\n            prop.abort();\r\n        }\r\n    };\r\n    FileUploader.prototype.uploadAll = function () {\r\n        var items = this.getNotUploadedItems().filter(function (item) { return !item.isUploading; });\r\n        if (!items.length) {\r\n            return;\r\n        }\r\n        items.map(function (item) { return item._prepareToUploading(); });\r\n        items[0].upload();\r\n    };\r\n    FileUploader.prototype.cancelAll = function () {\r\n        var items = this.getNotUploadedItems();\r\n        items.map(function (item) { return item.cancel(); });\r\n    };\r\n    FileUploader.prototype.isFile = function (value) {\r\n        return isFile(value);\r\n    };\r\n    FileUploader.prototype.isFileLikeObject = function (value) {\r\n        return value instanceof file_like_object_class_1.FileLikeObject;\r\n    };\r\n    FileUploader.prototype.getIndexOfItem = function (value) {\r\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\r\n    };\r\n    FileUploader.prototype.getNotUploadedItems = function () {\r\n        return this.queue.filter(function (item) { return !item.isUploaded; });\r\n    };\r\n    FileUploader.prototype.getReadyItems = function () {\r\n        return this.queue\r\n            .filter(function (item) { return (item.isReady && !item.isUploading); })\r\n            .sort(function (item1, item2) { return item1.index - item2.index; });\r\n    };\r\n    FileUploader.prototype.destroy = function () {\r\n        return void 0;\r\n    };\r\n    FileUploader.prototype.onAfterAddingAll = function (fileItems) {\r\n        return { fileItems: fileItems };\r\n    };\r\n    FileUploader.prototype.onBuildItemForm = function (fileItem, form) {\r\n        return { fileItem: fileItem, form: form };\r\n    };\r\n    FileUploader.prototype.onAfterAddingFile = function (fileItem) {\r\n        return { fileItem: fileItem };\r\n    };\r\n    FileUploader.prototype.onWhenAddingFileFailed = function (item, filter, options) {\r\n        return { item: item, filter: filter, options: options };\r\n    };\r\n    FileUploader.prototype.onBeforeUploadItem = function (fileItem) {\r\n        return { fileItem: fileItem };\r\n    };\r\n    FileUploader.prototype.onProgressItem = function (fileItem, progress) {\r\n        return { fileItem: fileItem, progress: progress };\r\n    };\r\n    FileUploader.prototype.onProgressAll = function (progress) {\r\n        return { progress: progress };\r\n    };\r\n    FileUploader.prototype.onSuccessItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onErrorItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCancelItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCompleteChunk = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCompleteItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCompleteAll = function () {\r\n        return void 0;\r\n    };\r\n    FileUploader.prototype._mimeTypeFilter = function (item) {\r\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\r\n    };\r\n    FileUploader.prototype._fileSizeFilter = function (item) {\r\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\r\n    };\r\n    FileUploader.prototype._fileTypeFilter = function (item) {\r\n        return !(this.options.allowedFileType &&\r\n            this.options.allowedFileType.indexOf(file_type_class_1.FileType.getMimeClass(item)) === -1);\r\n    };\r\n    FileUploader.prototype._onErrorItem = function (item, response, status, headers) {\r\n        item._onError(response, status, headers);\r\n        this.onErrorItem(item, response, status, headers);\r\n    };\r\n    FileUploader.prototype._onCompleteChunk = function (item, response, status, headers) {\r\n        this.onCompleteChunk(item, response, status, headers);\r\n        item._onCompleteChunk(response, status, headers);\r\n        this.progress = this._getTotalProgress();\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._onCompleteItem = function (item, response, status, headers) {\r\n        item._onComplete(response, status, headers);\r\n        this.onCompleteItem(item, response, status, headers);\r\n        var nextItem = this.getReadyItems()[0];\r\n        this.isUploading = false;\r\n        if (nextItem) {\r\n            nextItem.upload();\r\n            return;\r\n        }\r\n        this.onCompleteAll();\r\n        this.progress = this._getTotalProgress();\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._headersGetter = function (parsedHeaders) {\r\n        return function (name) {\r\n            if (name) {\r\n                return parsedHeaders[name.toLowerCase()] || void 0;\r\n            }\r\n            return parsedHeaders;\r\n        };\r\n    };\r\n    FileUploader.prototype._xhrAppendEvents = function (xhr, item) {\r\n        var _this = this;\r\n        var that = this;\r\n        xhr.upload.onprogress = function (event) {\r\n            var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\r\n            if (that.options.chunkSize > 0) {\r\n                progress = Math.round(((item._currentChunk - 1) * 100) / item._totalChunks) + Math.round(progress / item._totalChunks);\r\n            }\r\n            _this._onProgressItem(item, progress);\r\n        };\r\n        xhr.onload = function () {\r\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\r\n            var response = _this._transformResponse(xhr.response, headers);\r\n            var gist = _this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\r\n            var method = '_on' + gist + 'Item';\r\n            if (_this.options.chunkSize > 0) {\r\n                item._chunkUploaders.pop();\r\n                if (item._currentChunk >= item._totalChunks) {\r\n                    _this[method](item, response, xhr.status, headers);\r\n                    _this._onCompleteItem(item, response, xhr.status, headers);\r\n                }\r\n                else {\r\n                    _this._onCompleteChunk(item, response, xhr.status, headers);\r\n                }\r\n            }\r\n            else {\r\n                _this[method](item, response, xhr.status, headers);\r\n                _this._onCompleteItem(item, response, xhr.status, headers);\r\n            }\r\n        };\r\n        xhr.onerror = function () {\r\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\r\n            var response = _this._transformResponse(xhr.response, headers);\r\n            _this._onErrorItem(item, response, xhr.status, headers);\r\n            _this._onCompleteItem(item, response, xhr.status, headers);\r\n        };\r\n        xhr.onabort = function () {\r\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\r\n            var response = _this._transformResponse(xhr.response, headers);\r\n            _this._onCancelItem(item, response, xhr.status, headers);\r\n            _this._onCompleteItem(item, response, xhr.status, headers);\r\n        };\r\n        xhr.open(item.method, item.url, true);\r\n        xhr.withCredentials = item.withCredentials;\r\n        if (this.options.headers) {\r\n            for (var _i = 0, _a = this.options.headers; _i < _a.length; _i++) {\r\n                var header = _a[_i];\r\n                xhr.setRequestHeader(header.name, header.value);\r\n            }\r\n        }\r\n        if (item.headers.length) {\r\n            for (var _b = 0, _c = item.headers; _b < _c.length; _b++) {\r\n                var header = _c[_b];\r\n                xhr.setRequestHeader(header.name, header.value);\r\n            }\r\n        }\r\n        if (this.authToken) {\r\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\r\n        }\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                that.response.emit(xhr.responseText);\r\n            }\r\n        };\r\n        return xhr;\r\n    };\r\n    FileUploader.prototype._buildMultiPartSendable = function (item, start, end) {\r\n        var _this = this;\r\n        if (start === void 0) { start = null; }\r\n        if (end === void 0) { end = null; }\r\n        var sendable;\r\n        sendable = new FormData();\r\n        this._onBuildItemForm(item, sendable);\r\n        var file = null;\r\n        if (this.options.chunkSize > 0) {\r\n            file = item.getNextChunk();\r\n        }\r\n        else {\r\n            file = item._file;\r\n        }\r\n        var appendFile = function () { return sendable.append(item.alias, file, item.file.name); };\r\n        if (!this.options.parametersBeforeFiles) {\r\n            appendFile();\r\n        }\r\n        // For AWS, Additional Parameters must come BEFORE Files\r\n        if (this.options.additionalParameter !== undefined) {\r\n            Object.keys(this.options.additionalParameter).forEach(function (key) {\r\n                var paramVal = _this.options.additionalParameter[key];\r\n                // Allow an additional parameter to include the filename\r\n                if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\r\n                    paramVal = paramVal.replace('{{file_name}}', item.file.name);\r\n                }\r\n                sendable.append(key, paramVal);\r\n            });\r\n        }\r\n        if (this.options.chunkSize > 0 && this.options.totalChunkParam) {\r\n            sendable.append(this.options.totalChunkParam, item._totalChunks.toString());\r\n        }\r\n        if (this.options.chunkSize > 0 && this.options.currentChunkParam) {\r\n            sendable.append(this.options.currentChunkParam, item._currentChunk.toString());\r\n        }\r\n        if (this.options.parametersBeforeFiles) {\r\n            appendFile();\r\n        }\r\n        return sendable;\r\n    };\r\n    FileUploader.prototype._xhrTransport = function (item) {\r\n        var that = this;\r\n        var xhr = item._xhr = new XMLHttpRequest();\r\n        var sendable;\r\n        this._onBeforeUploadItem(item);\r\n        if (typeof item._file.size !== 'number') {\r\n            throw new TypeError('The file specified is no longer valid');\r\n        }\r\n        if (!this.options.disableMultipart) {\r\n            /* CHUNCKED FILE UPLOAD */\r\n            if (this.options.chunkSize > 0) {\r\n                var chunkSize_1 = this.options.chunkSize;\r\n                var chunkMethod_1 = this.options.chunkMethod;\r\n                var NUM_CHUNKS = Math.max(Math.ceil(item._file.size / chunkSize_1), 1);\r\n                var CUR_CHUNK = 0;\r\n                var start_1 = 0;\r\n                var end_1 = chunkSize_1;\r\n                item._chunkUploaders = [];\r\n                item._currentChunk = 0;\r\n                item._totalChunks = NUM_CHUNKS;\r\n                item._onCompleteChunkCallnext = function () {\r\n                    item._currentChunk++;\r\n                    if (item._currentChunk > 1) {\r\n                        item.method = chunkMethod_1;\r\n                    }\r\n                    var sendable = this.uploader._buildMultiPartSendable(item, start_1, end_1);\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr = this.uploader._xhrAppendEvents(xhr, item);\r\n                    item._chunkUploaders.push(xhr);\r\n                    xhr.send(sendable);\r\n                    start_1 = end_1;\r\n                    end_1 = start_1 + chunkSize_1;\r\n                };\r\n                item.createFileChunk(this.options.chunkSize);\r\n                item.setIsUploading(true);\r\n                item._onCompleteChunkCallnext();\r\n                this._render();\r\n                return;\r\n            }\r\n            else {\r\n                sendable = this._buildMultiPartSendable(item);\r\n            }\r\n        }\r\n        else {\r\n            sendable = this.options.formatDataFunction(item);\r\n        }\r\n        // Append Evenets\r\n        xhr = this._xhrAppendEvents(xhr, item);\r\n        if (this.options.formatDataFunctionIsAsync) {\r\n            sendable.then(function (result) { return xhr.send(JSON.stringify(result)); });\r\n        }\r\n        else {\r\n            xhr.send(sendable);\r\n        }\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._getTotalProgress = function (value) {\r\n        if (value === void 0) { value = 0; }\r\n        if (this.options.removeAfterUpload) {\r\n            return value;\r\n        }\r\n        var notUploaded = this.getNotUploadedItems().length;\r\n        var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\r\n        var ratio = 100 / this.queue.length;\r\n        var current = value * ratio / 100;\r\n        return Math.round(uploaded * ratio + current);\r\n    };\r\n    FileUploader.prototype._getFilters = function (filters) {\r\n        if (!filters) {\r\n            return this.options.filters;\r\n        }\r\n        if (Array.isArray(filters)) {\r\n            return filters;\r\n        }\r\n        if (typeof filters === 'string') {\r\n            var names_1 = filters.match(/[^\\s,]+/g);\r\n            return this.options.filters\r\n                .filter(function (filter) { return names_1.indexOf(filter.name) !== -1; });\r\n        }\r\n        return this.options.filters;\r\n    };\r\n    FileUploader.prototype._render = function () {\r\n        return void 0;\r\n    };\r\n    FileUploader.prototype._queueLimitFilter = function () {\r\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\r\n    };\r\n    FileUploader.prototype._isValidFile = function (file, filters, options) {\r\n        var _this = this;\r\n        this._failFilterIndex = -1;\r\n        return !filters.length ? true : filters.every(function (filter) {\r\n            _this._failFilterIndex++;\r\n            return filter.fn.call(_this, file, options);\r\n        });\r\n    };\r\n    FileUploader.prototype._isSuccessCode = function (status) {\r\n        return (status >= 200 && status < 300) || status === 304;\r\n    };\r\n    FileUploader.prototype._transformResponse = function (response, headers) {\r\n        return response;\r\n    };\r\n    FileUploader.prototype._parseHeaders = function (headers) {\r\n        var parsed = {};\r\n        var key;\r\n        var val;\r\n        var i;\r\n        if (!headers) {\r\n            return parsed;\r\n        }\r\n        headers.split('\\n').map(function (line) {\r\n            i = line.indexOf(':');\r\n            key = line.slice(0, i).trim().toLowerCase();\r\n            val = line.slice(i + 1).trim();\r\n            if (key) {\r\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n            }\r\n        });\r\n        return parsed;\r\n    };\r\n    FileUploader.prototype._onWhenAddingFileFailed = function (item, filter, options) {\r\n        this.onWhenAddingFileFailed(item, filter, options);\r\n    };\r\n    FileUploader.prototype._onAfterAddingFile = function (item) {\r\n        this.onAfterAddingFile(item);\r\n    };\r\n    FileUploader.prototype._onAfterAddingAll = function (items) {\r\n        this.onAfterAddingAll(items);\r\n    };\r\n    FileUploader.prototype._onBeforeUploadItem = function (item) {\r\n        item._onBeforeUpload();\r\n        this.onBeforeUploadItem(item);\r\n    };\r\n    FileUploader.prototype._onBuildItemForm = function (item, form) {\r\n        item._onBuildForm(form);\r\n        this.onBuildItemForm(item, form);\r\n    };\r\n    FileUploader.prototype._onProgressItem = function (item, progress) {\r\n        var total = this._getTotalProgress(progress);\r\n        this.progress = total;\r\n        item._onProgress(progress);\r\n        this.onProgressItem(item, progress);\r\n        this.onProgressAll(total);\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._onSuccessItem = function (item, response, status, headers) {\r\n        item._onSuccess(response, status, headers);\r\n        this.onSuccessItem(item, response, status, headers);\r\n    };\r\n    FileUploader.prototype._onCancelItem = function (item, response, status, headers) {\r\n        item._onCancel(response, status, headers);\r\n        this.onCancelItem(item, response, status, headers);\r\n    };\r\n    return FileUploader;\r\n}());\r\nexports.FileUploader = FileUploader;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction isElement(node) {\r\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\r\n}\r\nvar FileLikeObject = /** @class */ (function () {\r\n    function FileLikeObject(fileOrInput) {\r\n        this.rawFile = fileOrInput;\r\n        var isInput = isElement(fileOrInput);\r\n        var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\r\n        var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\r\n        var method = '_createFrom' + postfix;\r\n        this[method](fakePathOrObject);\r\n    }\r\n    FileLikeObject.prototype._createFromFakePath = function (path) {\r\n        this.lastModifiedDate = void 0;\r\n        this.size = void 0;\r\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\r\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\r\n    };\r\n    FileLikeObject.prototype._createFromObject = function (object) {\r\n        this.size = object.size;\r\n        this.type = object.type;\r\n        this.name = object.name;\r\n    };\r\n    return FileLikeObject;\r\n}());\r\nexports.FileLikeObject = FileLikeObject;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(0);\r\nvar file_uploader_class_1 = __webpack_require__(1);\r\nvar FileSelectDirective = /** @class */ (function () {\r\n    function FileSelectDirective(element) {\r\n        this.onFileSelected = new core_1.EventEmitter();\r\n        this.element = element;\r\n    }\r\n    FileSelectDirective.prototype.getOptions = function () {\r\n        return this.uploader.options;\r\n    };\r\n    FileSelectDirective.prototype.getFilters = function () {\r\n        return {};\r\n    };\r\n    FileSelectDirective.prototype.isEmptyAfterSelection = function () {\r\n        return !!this.element.nativeElement.attributes.multiple;\r\n    };\r\n    FileSelectDirective.prototype.onChange = function () {\r\n        var files = this.element.nativeElement.files;\r\n        var options = this.getOptions();\r\n        var filters = this.getFilters();\r\n        this.uploader.addToQueue(files, options, filters);\r\n        this.onFileSelected.emit(files);\r\n        if (this.isEmptyAfterSelection()) {\r\n            this.element.nativeElement.value = '';\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", file_uploader_class_1.FileUploader)\r\n    ], FileSelectDirective.prototype, \"uploader\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], FileSelectDirective.prototype, \"onFileSelected\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('change'),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", Object)\r\n    ], FileSelectDirective.prototype, \"onChange\", null);\r\n    FileSelectDirective = __decorate([\r\n        core_1.Directive({ selector: '[ng2FileSelect]' }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\r\n    ], FileSelectDirective);\r\n    return FileSelectDirective;\r\n}());\r\nexports.FileSelectDirective = FileSelectDirective;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar file_like_object_class_1 = __webpack_require__(2);\r\nvar file_chunk_class_1 = __webpack_require__(7);\r\nvar FileItem = /** @class */ (function () {\r\n    function FileItem(uploader, some, options) {\r\n        this.url = '/';\r\n        this.headers = [];\r\n        this.withCredentials = true;\r\n        this.formData = [];\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = false;\r\n        this.isSuccess = false;\r\n        this.isCancel = false;\r\n        this.isError = false;\r\n        this.progress = 0;\r\n        this.index = void 0;\r\n        this._chunkUploaders = [];\r\n        this._currentChunk = 0;\r\n        this._totalChunks = 0;\r\n        this.uploader = uploader;\r\n        this.some = some;\r\n        this.options = options;\r\n        this.file = new file_like_object_class_1.FileLikeObject(some);\r\n        this._file = some;\r\n        if (uploader.options) {\r\n            this.method = uploader.options.method || 'POST';\r\n            this.alias = uploader.options.itemAlias || 'file';\r\n        }\r\n        this.url = uploader.options.url;\r\n    }\r\n    FileItem.prototype.upload = function () {\r\n        try {\r\n            this.uploader.uploadItem(this);\r\n        }\r\n        catch (e) {\r\n            this.uploader._onCompleteItem(this, '', 0, {});\r\n            this.uploader._onErrorItem(this, '', 0, {});\r\n        }\r\n    };\r\n    FileItem.prototype.createFileChunk = function (chunkSize) {\r\n        this.fileChunks = new file_chunk_class_1.FileChunk(this._file, { byteStepSize: chunkSize });\r\n        this._currentChunk = this.fileChunks.currentChunk;\r\n        this._totalChunks = this.fileChunks.totalChunks;\r\n    };\r\n    FileItem.prototype.getNextChunk = function () {\r\n        this.fileChunks.prepareNextChunk();\r\n        return this.fileChunks.getCurrentRawFileChunk();\r\n    };\r\n    FileItem.prototype.setIsUploading = function (val) {\r\n        this.isUploading = val;\r\n        if (this.fileChunks) {\r\n            this.fileChunks.setUploading(val);\r\n        }\r\n    };\r\n    Object.defineProperty(FileItem.prototype, \"fileChunks\", {\r\n        get: function () {\r\n            return this._fileChunks;\r\n        },\r\n        set: function (val) {\r\n            this._fileChunks = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FileItem.prototype.cancel = function () {\r\n        this.uploader.cancelItem(this);\r\n    };\r\n    FileItem.prototype.remove = function () {\r\n        this.uploader.removeFromQueue(this);\r\n    };\r\n    FileItem.prototype.onBeforeUpload = function () {\r\n        return void 0;\r\n    };\r\n    FileItem.prototype.onBuildForm = function (form) {\r\n        return { form: form };\r\n    };\r\n    FileItem.prototype.onProgress = function (progress) {\r\n        return { progress: progress };\r\n    };\r\n    FileItem.prototype.onSuccess = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onError = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onCancel = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onComplete = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onCompleteChunk = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype._onBeforeUpload = function () {\r\n        this.isReady = true;\r\n        this.isUploading = true;\r\n        this.isUploaded = false;\r\n        this.isSuccess = false;\r\n        this.isCancel = false;\r\n        this.isError = false;\r\n        this.progress = 0;\r\n        this.onBeforeUpload();\r\n    };\r\n    FileItem.prototype._onBuildForm = function (form) {\r\n        this.onBuildForm(form);\r\n    };\r\n    FileItem.prototype._onProgress = function (progress) {\r\n        this.progress = progress;\r\n        this.onProgress(progress);\r\n    };\r\n    FileItem.prototype._onSuccess = function (response, status, headers) {\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = true;\r\n        this.isSuccess = true;\r\n        this.isCancel = false;\r\n        this.isError = false;\r\n        this.progress = 100;\r\n        this.index = void 0;\r\n        this.onSuccess(response, status, headers);\r\n    };\r\n    FileItem.prototype._onError = function (response, status, headers) {\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = true;\r\n        this.isSuccess = false;\r\n        this.isCancel = false;\r\n        this.isError = true;\r\n        this.progress = 0;\r\n        this.index = void 0;\r\n        this.onError(response, status, headers);\r\n    };\r\n    FileItem.prototype._onCancel = function (response, status, headers) {\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = false;\r\n        this.isSuccess = false;\r\n        this.isCancel = true;\r\n        this.isError = false;\r\n        this.progress = 0;\r\n        this.index = void 0;\r\n        this.onCancel(response, status, headers);\r\n    };\r\n    FileItem.prototype._onComplete = function (response, status, headers) {\r\n        this.onComplete(response, status, headers);\r\n        if (this.uploader.options.removeAfterUpload) {\r\n            this.remove();\r\n        }\r\n    };\r\n    FileItem.prototype._onCompleteChunk = function (response, status, headers) {\r\n        this._onCompleteChunkCallnext();\r\n        this.onCompleteChunk(response, status, headers);\r\n    };\r\n    FileItem.prototype._onCompleteChunkCallnext = function () {\r\n    };\r\n    FileItem.prototype._prepareToUploading = function () {\r\n        this.index = this.index || ++this.uploader._nextIndex;\r\n        this.isReady = true;\r\n    };\r\n    return FileItem;\r\n}());\r\nexports.FileItem = FileItem;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(0);\r\nvar file_uploader_class_1 = __webpack_require__(1);\r\nvar FileDropDirective = /** @class */ (function () {\r\n    function FileDropDirective(element) {\r\n        this.fileOver = new core_1.EventEmitter();\r\n        this.onFileDrop = new core_1.EventEmitter();\r\n        this.element = element;\r\n    }\r\n    FileDropDirective.prototype.getOptions = function () {\r\n        return this.uploader.options;\r\n    };\r\n    FileDropDirective.prototype.getFilters = function () {\r\n        return {};\r\n    };\r\n    FileDropDirective.prototype.onDrop = function (event) {\r\n        var transfer = this._getTransfer(event);\r\n        if (!transfer) {\r\n            return;\r\n        }\r\n        var options = this.getOptions();\r\n        var filters = this.getFilters();\r\n        this._preventAndStop(event);\r\n        this.uploader.addToQueue(transfer.files, options, filters);\r\n        this.fileOver.emit(false);\r\n        this.onFileDrop.emit(transfer.files);\r\n    };\r\n    FileDropDirective.prototype.onDragOver = function (event) {\r\n        var transfer = this._getTransfer(event);\r\n        if (!this._haveFiles(transfer.types)) {\r\n            return;\r\n        }\r\n        transfer.dropEffect = 'copy';\r\n        this._preventAndStop(event);\r\n        this.fileOver.emit(true);\r\n    };\r\n    FileDropDirective.prototype.onDragLeave = function (event) {\r\n        if (this.element) {\r\n            if (event.currentTarget === this.element[0]) {\r\n                return;\r\n            }\r\n        }\r\n        this._preventAndStop(event);\r\n        this.fileOver.emit(false);\r\n    };\r\n    FileDropDirective.prototype._getTransfer = function (event) {\r\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\r\n    };\r\n    FileDropDirective.prototype._preventAndStop = function (event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n    FileDropDirective.prototype._haveFiles = function (types) {\r\n        if (!types) {\r\n            return false;\r\n        }\r\n        if (types.indexOf) {\r\n            return types.indexOf('Files') !== -1;\r\n        }\r\n        else if (types.contains) {\r\n            return types.contains('Files');\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", file_uploader_class_1.FileUploader)\r\n    ], FileDropDirective.prototype, \"uploader\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], FileDropDirective.prototype, \"fileOver\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", core_1.EventEmitter)\r\n    ], FileDropDirective.prototype, \"onFileDrop\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('drop', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], FileDropDirective.prototype, \"onDrop\", null);\r\n    __decorate([\r\n        core_1.HostListener('dragover', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], FileDropDirective.prototype, \"onDragOver\", null);\r\n    __decorate([\r\n        core_1.HostListener('dragleave', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", Object)\r\n    ], FileDropDirective.prototype, \"onDragLeave\", null);\r\n    FileDropDirective = __decorate([\r\n        core_1.Directive({ selector: '[ng2FileDrop]' }),\r\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\r\n    ], FileDropDirective);\r\n    return FileDropDirective;\r\n}());\r\nexports.FileDropDirective = FileDropDirective;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(__webpack_require__(3));\r\n__export(__webpack_require__(5));\r\n__export(__webpack_require__(1));\r\n__export(__webpack_require__(4));\r\n__export(__webpack_require__(2));\r\nvar file_upload_module_1 = __webpack_require__(9);\r\nexports.FileUploadModule = file_upload_module_1.FileUploadModule;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar FileChunk = /** @class */ (function () {\r\n    function FileChunk(rawFile, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.stepSize = 1024 * 1024 * 3;\r\n        this.rawFile = null;\r\n        this.uploadProgress = null;\r\n        this.uploading = null;\r\n        this.uploadComplete = null;\r\n        this.byteStepSize = null;\r\n        this.totalSize = null;\r\n        this.startByte = null;\r\n        this.endByte = null;\r\n        this.currentChunk = 0;\r\n        this.totalChunks = null;\r\n        this.uniqueIdentifier = null;\r\n        this.totalSent = null;\r\n        this.extraData = {};\r\n        if (typeof options !== 'undefined') {\r\n            if (typeof options.byteStepSize !== 'undefined') {\r\n                this.setByteStepSize(options.byteStepSize);\r\n            }\r\n        }\r\n        this.setRawFile(rawFile);\r\n        this.setRawFile(rawFile);\r\n        this.setUploadProgress(0);\r\n        this.setUploading(false);\r\n        this.setUploadComplete(false);\r\n        this.setTotalSize(this.getRawFile().size);\r\n        this.setStartByte(0);\r\n        this.setEndByte(this.getByteStepSize());\r\n        this.setCurrentChunk(0);\r\n        if (!this.getBrowserSliceMethod()) {\r\n            this.setTotalChunks(1);\r\n        }\r\n        else {\r\n            this.setTotalChunks(Math.ceil(this.totalSize / this.byteStepSize));\r\n        }\r\n        this.setUniqueIdenfier(this.generateUniqueIdentifier());\r\n        this.setTotalSent(0);\r\n    }\r\n    FileChunk.prototype.setExtraData = function (index, value) {\r\n        this.extraData[index] = value;\r\n    };\r\n    FileChunk.prototype.getExtraData = function (index) {\r\n        return this.extraData[index];\r\n    };\r\n    //getters and setters\r\n    FileChunk.prototype.setProgress = function (v) {\r\n        this.uploadProgress = v;\r\n    };\r\n    FileChunk.prototype.getProgress = function () {\r\n        return this.uploadProgress;\r\n    };\r\n    FileChunk.prototype.setUploading = function (v) {\r\n        this.uploading = v;\r\n    };\r\n    FileChunk.prototype.getUploading = function () {\r\n        return this.uploading;\r\n    };\r\n    FileChunk.prototype.getUploadComplete = function () {\r\n        return this.uploadComplete;\r\n    };\r\n    FileChunk.prototype.setUploadComplete = function (v) {\r\n        this.uploadComplete = v;\r\n    };\r\n    FileChunk.prototype.setUploadProgress = function (v) {\r\n        this.uploadProgress = v;\r\n    };\r\n    FileChunk.prototype.getUploadProgress = function () {\r\n        return this.uploadProgress;\r\n    };\r\n    FileChunk.prototype.getStartByte = function () {\r\n        return this.startByte;\r\n    };\r\n    FileChunk.prototype.setStartByte = function (v) {\r\n        this.startByte = v;\r\n    };\r\n    FileChunk.prototype.getEndByte = function () {\r\n        return this.endByte;\r\n    };\r\n    FileChunk.prototype.setEndByte = function (v) {\r\n        this.endByte = v;\r\n    };\r\n    FileChunk.prototype.getByteStepSize = function () {\r\n        return this.byteStepSize;\r\n    };\r\n    FileChunk.prototype.setByteStepSize = function (v) {\r\n        this.byteStepSize = v;\r\n    };\r\n    FileChunk.prototype.setTotalSize = function (v) {\r\n        this.totalSize = v;\r\n    };\r\n    FileChunk.prototype.getTotalSize = function () {\r\n        return this.totalSize;\r\n    };\r\n    FileChunk.prototype.getRawFile = function () {\r\n        return this.rawFile;\r\n    };\r\n    FileChunk.prototype.setRawFile = function (v) {\r\n        this.rawFile = v;\r\n    };\r\n    FileChunk.prototype.getCurrentChunk = function () {\r\n        return this.currentChunk;\r\n    };\r\n    FileChunk.prototype.setCurrentChunk = function (v) {\r\n        this.currentChunk = v;\r\n    };\r\n    FileChunk.prototype.getTotalChunks = function () {\r\n        return this.totalChunks;\r\n    };\r\n    FileChunk.prototype.setTotalChunks = function (v) {\r\n        this.totalChunks = v;\r\n    };\r\n    FileChunk.prototype.setUniqueIdenfier = function (v) {\r\n        this.uniqueIdentifier = v;\r\n    };\r\n    FileChunk.prototype.getUniqueIdenfier = function () {\r\n        return this.uniqueIdentifier;\r\n    };\r\n    FileChunk.prototype.getRawFileExtension = function () {\r\n        var extension = this.getRawFileName().split('.');\r\n        return extension[extension.length - 1];\r\n    };\r\n    FileChunk.prototype.getRawFileName = function () {\r\n        return this.getRawFile().name;\r\n    };\r\n    FileChunk.prototype.getContentType = function () {\r\n        return this.getRawFile().type;\r\n    };\r\n    FileChunk.prototype.getTotalSent = function () {\r\n        return this.totalSent;\r\n    };\r\n    FileChunk.prototype.setTotalSent = function (v) {\r\n        this.totalSent = v;\r\n    };\r\n    FileChunk.prototype.getCurrentRawFileChunk = function () {\r\n        if (!this.getBrowserSliceMethod()) {\r\n            return this.getRawFile();\r\n        }\r\n        else {\r\n            return this.getRawFile()[this.getBrowserSliceMethod()](this.getStartByte(), this.getEndByte());\r\n        }\r\n    };\r\n    FileChunk.prototype.retrocedeChunk = function () {\r\n        if (!this.getBrowserSliceMethod()) {\r\n            return false;\r\n        }\r\n        this.setEndByte(this.getStartByte());\r\n        this.setStartByte(this.getStartByte() - this.getByteStepSize());\r\n        this.setCurrentChunk(this.getCurrentChunk() - 1);\r\n        if (this.getTotalSent() != 0) {\r\n            this.setTotalSent(this.getTotalSent() - this.getByteStepSize());\r\n        }\r\n    };\r\n    FileChunk.prototype.prepareNextChunk = function () {\r\n        if (!this.getBrowserSliceMethod()) {\r\n            return false;\r\n        }\r\n        if (this.getEndByte() > this.getTotalSize()) { //finished\r\n            return false;\r\n        }\r\n        this.setStartByte(this.getEndByte());\r\n        this.setEndByte(this.getEndByte() + this.getByteStepSize());\r\n        this.setCurrentChunk(this.getCurrentChunk() + 1);\r\n        return true;\r\n    };\r\n    FileChunk.prototype.getBrowserSliceMethod = function () {\r\n        if (this.rawFile && typeof this.rawFile !== 'undefined') {\r\n            if (this.rawFile.slice && typeof this.rawFile.slice == 'function') {\r\n                return 'slice';\r\n            }\r\n            else if (this.rawFile.mozSlice && typeof this.rawFile.mozSlice == 'function') {\r\n                return 'mozSlice';\r\n            }\r\n            else if (this.rawFile.webkitSlice && typeof this.rawFile.webkitSlice == 'function') {\r\n                return 'webkitSlice';\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }; //getBrowserSliceMethod() ends here\r\n    FileChunk.prototype.generateUniqueIdentifier = function () {\r\n        var d = new Date().getTime();\r\n        if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\r\n            d += performance.now(); //use high-precision timer if available\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n    };\r\n    return FileChunk;\r\n}());\r\nexports.FileChunk = FileChunk;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar FileType = /** @class */ (function () {\r\n    function FileType() {\r\n    }\r\n    FileType.getMimeClass = function (file) {\r\n        var mimeClass = 'application';\r\n        if (this.mime_psd.indexOf(file.type) !== -1) {\r\n            mimeClass = 'image';\r\n        }\r\n        else if (file.type.match('image.*')) {\r\n            mimeClass = 'image';\r\n        }\r\n        else if (file.type.match('video.*')) {\r\n            mimeClass = 'video';\r\n        }\r\n        else if (file.type.match('audio.*')) {\r\n            mimeClass = 'audio';\r\n        }\r\n        else if (file.type === 'application/pdf') {\r\n            mimeClass = 'pdf';\r\n        }\r\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\r\n            mimeClass = 'compress';\r\n        }\r\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\r\n            mimeClass = 'doc';\r\n        }\r\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\r\n            mimeClass = 'xls';\r\n        }\r\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\r\n            mimeClass = 'ppt';\r\n        }\r\n        if (mimeClass === 'application') {\r\n            mimeClass = this.fileTypeDetection(file.name);\r\n        }\r\n        return mimeClass;\r\n    };\r\n    FileType.fileTypeDetection = function (inputFilename) {\r\n        var types = {\r\n            'jpg': 'image',\r\n            'jpeg': 'image',\r\n            'tif': 'image',\r\n            'psd': 'image',\r\n            'bmp': 'image',\r\n            'png': 'image',\r\n            'nef': 'image',\r\n            'tiff': 'image',\r\n            'cr2': 'image',\r\n            'dwg': 'image',\r\n            'cdr': 'image',\r\n            'ai': 'image',\r\n            'indd': 'image',\r\n            'pin': 'image',\r\n            'cdp': 'image',\r\n            'skp': 'image',\r\n            'stp': 'image',\r\n            '3dm': 'image',\r\n            'mp3': 'audio',\r\n            'wav': 'audio',\r\n            'wma': 'audio',\r\n            'mod': 'audio',\r\n            'm4a': 'audio',\r\n            'compress': 'compress',\r\n            'zip': 'compress',\r\n            'rar': 'compress',\r\n            '7z': 'compress',\r\n            'lz': 'compress',\r\n            'z01': 'compress',\r\n            'bz2': 'compress',\r\n            'gz': 'compress',\r\n            'pdf': 'pdf',\r\n            'xls': 'xls',\r\n            'xlsx': 'xls',\r\n            'ods': 'xls',\r\n            'mp4': 'video',\r\n            'avi': 'video',\r\n            'wmv': 'video',\r\n            'mpg': 'video',\r\n            'mts': 'video',\r\n            'flv': 'video',\r\n            '3gp': 'video',\r\n            'vob': 'video',\r\n            'm4v': 'video',\r\n            'mpeg': 'video',\r\n            'm2ts': 'video',\r\n            'mov': 'video',\r\n            'doc': 'doc',\r\n            'docx': 'doc',\r\n            'eps': 'doc',\r\n            'txt': 'doc',\r\n            'odt': 'doc',\r\n            'rtf': 'doc',\r\n            'ppt': 'ppt',\r\n            'pptx': 'ppt',\r\n            'pps': 'ppt',\r\n            'ppsx': 'ppt',\r\n            'odp': 'ppt'\r\n        };\r\n        var chunks = inputFilename.split('.');\r\n        if (chunks.length < 2) {\r\n            return 'application';\r\n        }\r\n        var extension = chunks[chunks.length - 1].toLowerCase();\r\n        if (types[extension] === undefined) {\r\n            return 'application';\r\n        }\r\n        else {\r\n            return types[extension];\r\n        }\r\n    };\r\n    /*  MS office  */\r\n    FileType.mime_doc = [\r\n        'application/msword',\r\n        'application/msword',\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\r\n        'application/vnd.ms-word.document.macroEnabled.12',\r\n        'application/vnd.ms-word.template.macroEnabled.12'\r\n    ];\r\n    FileType.mime_xsl = [\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\r\n        'application/vnd.ms-excel.sheet.macroEnabled.12',\r\n        'application/vnd.ms-excel.template.macroEnabled.12',\r\n        'application/vnd.ms-excel.addin.macroEnabled.12',\r\n        'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\r\n    ];\r\n    FileType.mime_ppt = [\r\n        'application/vnd.ms-powerpoint',\r\n        'application/vnd.ms-powerpoint',\r\n        'application/vnd.ms-powerpoint',\r\n        'application/vnd.ms-powerpoint',\r\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n        'application/vnd.openxmlformats-officedocument.presentationml.template',\r\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\r\n        'application/vnd.ms-powerpoint.addin.macroEnabled.12',\r\n        'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\r\n        'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\r\n        'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\r\n    ];\r\n    /* PSD */\r\n    FileType.mime_psd = [\r\n        'image/photoshop',\r\n        'image/x-photoshop',\r\n        'image/psd',\r\n        'application/photoshop',\r\n        'application/psd',\r\n        'zz-application/zz-winassoc-psd'\r\n    ];\r\n    /* Compressed files */\r\n    FileType.mime_compress = [\r\n        'application/x-gtar',\r\n        'application/x-gcompress',\r\n        'application/compress',\r\n        'application/x-tar',\r\n        'application/x-rar-compressed',\r\n        'application/octet-stream',\r\n        'application/x-zip-compressed',\r\n        'application/zip-compressed',\r\n        'application/x-7z-compressed',\r\n        'application/gzip',\r\n        'application/x-bzip2'\r\n    ];\r\n    return FileType;\r\n}());\r\nexports.FileType = FileType;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar common_1 = __webpack_require__(10);\r\nvar core_1 = __webpack_require__(0);\r\nvar file_drop_directive_1 = __webpack_require__(5);\r\nvar file_select_directive_1 = __webpack_require__(3);\r\nvar FileUploadModule = /** @class */ (function () {\r\n    function FileUploadModule() {\r\n    }\r\n    FileUploadModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [common_1.CommonModule],\r\n            declarations: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective],\r\n            exports: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective]\r\n        })\r\n    ], FileUploadModule);\r\n    return FileUploadModule;\r\n}());\r\nexports.FileUploadModule = FileUploadModule;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// index.umd.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 20b0892f55c0cf5b0391","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}\n// module id = 0\n// module chunks = 0 1","import { EventEmitter } from '@angular/core';\nimport { FileLikeObject } from './file-like-object.class';\nimport { FileItem } from './file-item.class';\nimport { FileType } from './file-type.class';\nimport { FileChunk } from './file-chunk.class';\nfunction isFile(value: any): boolean {\n  return (File && value instanceof File);\n}\n\nexport interface Headers {\n  name: string;\n  value: string;\n}\n\nexport type ParsedResponseHeaders = { [ headerFieldName: string ]: string };\n\nexport type FilterFunction = {\n  name: string,\n  fn: (item?: FileLikeObject, options?: FileUploaderOptions) => boolean\n};\n\nexport interface FileUploaderOptions {\n  allowedMimeType?: string[];\n  allowedFileType?: string[];\n  autoUpload?: boolean;\n  isHTML5?: boolean;\n  filters?: FilterFunction[];\n  headers?: Headers[];\n  method?: string;\n  authToken?: string;\n  maxFileSize?: number;\n  queueLimit?: number;\n  removeAfterUpload?: boolean;\n  url?: string;\n  disableMultipart?: boolean;\n  itemAlias?: string;\n  authTokenHeader?: string;\n  additionalParameter?: { [ key: string ]: any };\n  parametersBeforeFiles?: boolean;\n  formatDataFunction?: Function;\n  formatDataFunctionIsAsync?: boolean;\n  chunkSize?: number;\n  currentChunkParam?: string;\n  totalChunkParam?: string;\n  chunkMethod?: string;\n  \n}\n\nexport class FileUploader {\n\n  public authToken: string;\n  public isUploading: boolean = false;\n  public queue: FileItem[] = [];\n  public progress: number = 0;\n  public _nextIndex: number = 0;\n  public autoUpload: any;\n  public authTokenHeader: string;\n  public response: EventEmitter<any>;\n  public chunkSize: number = null;\n  public currentChunkParam: string = \"current_chunk\";\n  public totalChunkParam: string = \"total_chunks\";\n  public chunkMethod: string = \"PUT\";\n  public options: FileUploaderOptions = {\n    autoUpload: false,\n    isHTML5: true,\n    filters: [],\n    chunkSize: null,\n    currentChunkParam: \"current_chunk\",\n    totalChunkParam: \"total_chunks\",\n    chunkMethod: \"PUT\",\n    removeAfterUpload: false,\n    disableMultipart: false,\n    formatDataFunction: (item: FileItem) => item._file,\n    formatDataFunctionIsAsync: false\n  };\n\n  protected _failFilterIndex: number;\n\n  public constructor(options: FileUploaderOptions) {\n    this.setOptions(options);\n    this.response = new EventEmitter<any>();\n  }\n\n  public setOptions(options: FileUploaderOptions): void {\n    this.options = Object.assign(this.options, options);\n\n    this.authToken = this.options.authToken;\n    this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n    this.autoUpload = this.options.autoUpload;\n    this.chunkSize = this.options.chunkSize;\n    this.currentChunkParam = this.options.currentChunkParam;\n    this.totalChunkParam = this.options.totalChunkParam;\n    this.chunkMethod = this.options.chunkMethod;\n    this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n\n    if (this.options.maxFileSize) {\n      this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n    }\n\n    if (this.options.allowedFileType) {\n      this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n    }\n\n    if (this.options.allowedMimeType) {\n      this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n    }\n\n    for (let i = 0; i < this.queue.length; i++) {\n      this.queue[ i ].url = this.options.url;\n    }\n  }\n\n  public addToQueue(files: File[], options?: FileUploaderOptions, filters?: FilterFunction[] | string): void {\n    let list: File[] = [];\n    for (let file of files) {\n      list.push(file);\n    }\n    let arrayOfFilters = this._getFilters(filters);\n    let count = this.queue.length;\n    let addedFileItems: FileItem[] = [];\n    list.map((some: File) => {\n      if (!options) {\n        options = this.options;\n      }\n\n      let temp = new FileLikeObject(some);\n      if (this._isValidFile(temp, arrayOfFilters, options)) {\n        let fileItem = new FileItem(this, some, options);\n        addedFileItems.push(fileItem);\n        this.queue.push(fileItem);\n        this._onAfterAddingFile(fileItem);\n      } else {\n        let filter = arrayOfFilters[ this._failFilterIndex ];\n        this._onWhenAddingFileFailed(temp, filter, options);\n      }\n    });\n    if (this.queue.length !== count) {\n      this._onAfterAddingAll(addedFileItems);\n      this.progress = this._getTotalProgress();\n    }\n    this._render();\n    if (this.options.autoUpload) {\n      this.uploadAll();\n    }\n  }\n\n  public removeFromQueue(value: FileItem): void {\n    let index = this.getIndexOfItem(value);\n    let item = this.queue[ index ];\n    if (item.isUploading) {\n      item.cancel();\n    }\n    this.queue.splice(index, 1);\n    this.progress = this._getTotalProgress();\n  }\n\n  public clearQueue(): void {\n    while (this.queue.length) {\n      this.queue[ 0 ].remove();\n    }\n    this.progress = 0;\n  }\n\n  public uploadItem(value: FileItem): void {\n    let index = this.getIndexOfItem(value);\n    let item = this.queue[ index ];\n    let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n    item._prepareToUploading();\n    if (this.isUploading) {\n      return;\n    }\n    this.isUploading = true;\n    (this as any)[ transport ](item);\n  }\n\n  public cancelItem(value: FileItem): void {\n    let index = this.getIndexOfItem(value);\n    let item = this.queue[ index ];\n    let prop = this.options.isHTML5 ? item._xhr : item._form;\n    if (item && item.isUploading) {\n      prop.abort();\n    }\n  }\n\n  public uploadAll(): void {\n    let items = this.getNotUploadedItems().filter((item: FileItem) => !item.isUploading);\n    if (!items.length) {\n      return;\n    }\n    items.map((item: FileItem) => item._prepareToUploading());\n    items[ 0 ].upload();\n  }\n\n  public cancelAll(): void {\n    let items = this.getNotUploadedItems();\n    items.map((item: FileItem) => item.cancel());\n  }\n\n  public isFile(value: any): boolean {\n    return isFile(value);\n  }\n\n  public isFileLikeObject(value: any): boolean {\n    return value instanceof FileLikeObject;\n  }\n\n  public getIndexOfItem(value: any): number {\n    return typeof value === 'number' ? value : this.queue.indexOf(value);\n  }\n\n  public getNotUploadedItems(): any[] {\n    return this.queue.filter((item: FileItem) => !item.isUploaded);\n  }\n\n  public getReadyItems(): any[] {\n    return this.queue\n      .filter((item: FileItem) => (item.isReady && !item.isUploading))\n      .sort((item1: any, item2: any) => item1.index - item2.index);\n  }\n\n  public destroy(): void {\n    return void 0;\n  }\n\n  public onAfterAddingAll(fileItems: any): any {\n    return { fileItems };\n  }\n\n  public onBuildItemForm(fileItem: FileItem, form: any): any {\n    return { fileItem, form };\n  }\n\n  public onAfterAddingFile(fileItem: FileItem): any {\n    return { fileItem };\n  }\n\n  public onWhenAddingFileFailed(item: FileLikeObject, filter: any, options: any): any {\n    return { item, filter, options };\n  }\n\n  public onBeforeUploadItem(fileItem: FileItem): any {\n    return { fileItem };\n  }\n\n  public onProgressItem(fileItem: FileItem, progress: any): any {\n    return { fileItem, progress };\n  }\n\n  public onProgressAll(progress: any): any {\n    return { progress };\n  }\n\n  public onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { item, response, status, headers };\n  }\n\n  public onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { item, response, status, headers };\n  }\n\n  public onCancelItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { item, response, status, headers };\n  }\n  public onCompleteChunk(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { item, response, status, headers };\n  }\n  public onCompleteItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { item, response, status, headers };\n  }\n\n  public onCompleteAll(): any {\n    return void 0;\n  }\n\n  public _mimeTypeFilter(item: FileLikeObject): boolean {\n    return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n  }\n\n  public _fileSizeFilter(item: FileLikeObject): boolean {\n    return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n  }\n\n  public _fileTypeFilter(item: FileLikeObject): boolean {\n    return !(this.options.allowedFileType &&\n      this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n  }\n\n  public _onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): void {\n    item._onError(response, status, headers);\n    this.onErrorItem(item, response, status, headers);\n  }\n  public _onCompleteChunk(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): void{\n    this.onCompleteChunk(item,response,status,headers);\n    item._onCompleteChunk(response, status, headers);\n    this.progress = this._getTotalProgress();\n    this._render();\n  }\n  public _onCompleteItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): void {\n    item._onComplete(response, status, headers);\n    this.onCompleteItem(item, response, status, headers);\n    let nextItem = this.getReadyItems()[ 0 ];\n    this.isUploading = false;\n    if (nextItem) {\n      nextItem.upload();\n      return;\n    }\n    this.onCompleteAll();\n    this.progress = this._getTotalProgress();\n    this._render();\n  }\n\n  protected _headersGetter(parsedHeaders: ParsedResponseHeaders): any {\n    return (name: any): any => {\n      if (name) {\n        return parsedHeaders[ name.toLowerCase() ] || void 0;\n      }\n      return parsedHeaders;\n    };\n  }\n  protected _xhrAppendEvents(xhr: XMLHttpRequest, item: FileItem): XMLHttpRequest{\n    let that = this;\n    xhr.upload.onprogress = (event: any) => {\n      let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n      if(that.options.chunkSize > 0){\n        progress = Math.round( ((item._currentChunk-1) * 100) / item._totalChunks) + Math.round(progress / item._totalChunks);\n      }\n      this._onProgressItem(item, progress);\n    };\n    xhr.onload = () => {\n      \n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      let response = this._transformResponse(xhr.response, headers);\n      let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n      let method = '_on' + gist + 'Item';\n      \n      \n      if(this.options.chunkSize > 0){\n        item._chunkUploaders.pop();\n        if (item._currentChunk >= item._totalChunks) {\n          (this as any)[ method ](item, response, xhr.status, headers);\n          this._onCompleteItem(item, response, xhr.status, headers);  \n        }else{\n          \n          this._onCompleteChunk(item,response,xhr.status,headers);\n        }\n      }else{\n        (this as any)[ method ](item, response, xhr.status, headers);\n        this._onCompleteItem(item, response, xhr.status, headers);  \n      }\n      \n    };\n    xhr.onerror = () => {\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      let response = this._transformResponse(xhr.response, headers);\n      this._onErrorItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.onabort = () => {\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      let response = this._transformResponse(xhr.response, headers);\n      this._onCancelItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n\n    xhr.open(item.method, item.url, true);\n    xhr.withCredentials = item.withCredentials;\n    if (this.options.headers) {\n      for (let header of this.options.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (item.headers.length) {\n      for (let header of item.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (this.authToken) {\n      xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n    }\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == XMLHttpRequest.DONE) {\n        that.response.emit(xhr.responseText)\n      }\n    }\n    return xhr;\n  }\n  \n  protected _buildMultiPartSendable(item: FileItem,start: number = null, end:number = null): FormData{\n    let sendable: FormData;\n    sendable = new FormData();\n    this._onBuildItemForm(item, sendable);\n    let file: any = null;\n    if(this.options.chunkSize > 0){\n\n      file = item.getNextChunk();\n    }else{\n      file = item._file;\n    }\n    const appendFile = () => sendable.append(item.alias, file, item.file.name);  \n    if (!this.options.parametersBeforeFiles) {\n      appendFile();\n    }\n\n    // For AWS, Additional Parameters must come BEFORE Files\n    if (this.options.additionalParameter !== undefined) {\n      Object.keys(this.options.additionalParameter).forEach((key: string) => {\n        let paramVal = this.options.additionalParameter[ key ];\n        // Allow an additional parameter to include the filename\n        if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n          paramVal = paramVal.replace('{{file_name}}', item.file.name);\n        }\n        sendable.append(key, paramVal);\n      });\n    }\n    if (this.options.chunkSize > 0 && this.options.totalChunkParam){\n      sendable.append(this.options.totalChunkParam,item._totalChunks.toString() );\n    }\n    if (this.options.chunkSize > 0 && this.options.currentChunkParam){\n      sendable.append(this.options.currentChunkParam,item._currentChunk.toString() );\n    }\n\n    if (this.options.parametersBeforeFiles) {\n      appendFile();\n    }\n\n    return sendable;\n  }\n  protected _xhrTransport(item: FileItem): any {\n    let that = this;\n    let xhr = item._xhr = new XMLHttpRequest();\n    let sendable: any;\n    this._onBeforeUploadItem(item);\n\n    if (typeof item._file.size !== 'number') {\n      throw new TypeError('The file specified is no longer valid');\n    }\n     \n    if (!this.options.disableMultipart) {\n      /* CHUNCKED FILE UPLOAD */\n      if (this.options.chunkSize > 0){\n        let chunkSize = this.options.chunkSize;\n        let chunkMethod = this.options.chunkMethod;\n        let NUM_CHUNKS = Math.max(Math.ceil(item._file.size / chunkSize), 1);\n        let CUR_CHUNK = 0;\n        let start = 0;\n        let end = chunkSize;\n\n        item._chunkUploaders = [];\n        item._currentChunk = 0;\n        item._totalChunks = NUM_CHUNKS;\n        \n        item._onCompleteChunkCallnext =  function(): void{\n          item._currentChunk ++;\n          if(item._currentChunk > 1){\n            item.method = chunkMethod;\n          }\n          let sendable = this.uploader._buildMultiPartSendable(item,start,end);\n          let xhr = new XMLHttpRequest();\n          xhr = this.uploader._xhrAppendEvents(xhr,item);\n          \n          item._chunkUploaders.push(xhr);\n          xhr.send(sendable);\n\n          start = end;\n          end = start + chunkSize;\n        }\n        item.createFileChunk(this.options.chunkSize)\n        item.setIsUploading(true)\n        item._onCompleteChunkCallnext();\n        this._render();\n        return;\n      }else{\n        sendable = this._buildMultiPartSendable(item);  \n      }\n      \n    } else {\n      sendable = this.options.formatDataFunction(item);\n    }\n    \n    // Append Evenets\n    xhr = this._xhrAppendEvents(xhr,item);\n    if (this.options.formatDataFunctionIsAsync) {\n      sendable.then(\n        (result: any) => xhr.send(JSON.stringify(result))\n      );\n    } else {\n      xhr.send(sendable);\n    }\n    this._render();\n  }\n\n  protected _getTotalProgress(value: number = 0): number {\n    if (this.options.removeAfterUpload) {\n      return value;\n    }\n    let notUploaded = this.getNotUploadedItems().length;\n    let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n    let ratio = 100 / this.queue.length;\n    let current = value * ratio / 100;\n    return Math.round(uploaded * ratio + current);\n  }\n\n  protected _getFilters(filters: FilterFunction[] | string): FilterFunction[] {\n    if (!filters) {\n      return this.options.filters;\n    }\n    if (Array.isArray(filters)) {\n      return filters;\n    }\n    if (typeof filters === 'string') {\n      let names = filters.match(/[^\\s,]+/g);\n      return this.options.filters\n        .filter((filter: any) => names.indexOf(filter.name) !== -1);\n    }\n    return this.options.filters;\n  }\n\n  protected _render(): any {\n    return void 0;\n  }\n\n  protected _queueLimitFilter(): boolean {\n    return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n  }\n\n  protected _isValidFile(file: FileLikeObject, filters: FilterFunction[], options: FileUploaderOptions): boolean {\n    this._failFilterIndex = -1;\n    return !filters.length ? true : filters.every((filter: FilterFunction) => {\n      this._failFilterIndex++;\n      return filter.fn.call(this, file, options);\n    });\n  }\n\n  protected _isSuccessCode(status: number): boolean {\n    return (status >= 200 && status < 300) || status === 304;\n  }\n\n  protected _transformResponse(response: string, headers: ParsedResponseHeaders): string {\n    return response;\n  }\n\n  protected _parseHeaders(headers: string): ParsedResponseHeaders {\n    let parsed: any = {};\n    let key: any;\n    let val: any;\n    let i: any;\n    if (!headers) {\n      return parsed;\n    }\n    headers.split('\\n').map((line: any) => {\n      i = line.indexOf(':');\n      key = line.slice(0, i).trim().toLowerCase();\n      val = line.slice(i + 1).trim();\n      if (key) {\n        parsed[ key ] = parsed[ key ] ? parsed[ key ] + ', ' + val : val;\n      }\n    });\n    return parsed;\n  }\n\n  protected _onWhenAddingFileFailed(item: FileLikeObject, filter: any, options: any): void {\n    this.onWhenAddingFileFailed(item, filter, options);\n  }\n\n  protected _onAfterAddingFile(item: FileItem): void {\n    this.onAfterAddingFile(item);\n  }\n\n  protected _onAfterAddingAll(items: any): void {\n    this.onAfterAddingAll(items);\n  }\n\n  protected _onBeforeUploadItem(item: FileItem): void {\n    item._onBeforeUpload();\n    this.onBeforeUploadItem(item);\n  }\n\n  protected _onBuildItemForm(item: FileItem, form: any): void {\n    item._onBuildForm(form);\n    this.onBuildItemForm(item, form);\n  }\n\n  protected _onProgressItem(item: FileItem, progress: any): void {\n    let total = this._getTotalProgress(progress);\n    this.progress = total;\n    item._onProgress(progress);\n    this.onProgressItem(item, progress);\n    this.onProgressAll(total);\n    this._render();\n  }\n\n  protected _onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): void {\n    item._onSuccess(response, status, headers);\n    this.onSuccessItem(item, response, status, headers);\n  }\n\n  protected _onCancelItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): void {\n    item._onCancel(response, status, headers);\n    this.onCancelItem(item, response, status, headers);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/file-upload/file-uploader.class.ts","function isElement(node: any): boolean {\n  return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\n\nexport class FileLikeObject {\n  public lastModifiedDate: any;\n  public size: any;\n  public type: string;\n  public name: string;\n  public rawFile: string;\n\n  public constructor(fileOrInput: any) {\n    this.rawFile = fileOrInput;\n    let isInput = isElement(fileOrInput);\n    let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n    let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n    let method = '_createFrom' + postfix;\n    (this as any)[ method ](fakePathOrObject);\n  }\n\n  public _createFromFakePath(path: string): void {\n    this.lastModifiedDate = void 0;\n    this.size = void 0;\n    this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n    this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n  }\n\n  public _createFromObject(object: { size: number, type: string, name: string }): void {\n    this.size = object.size;\n    this.type = object.type;\n    this.name = object.name;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/file-upload/file-like-object.class.ts","import { Directive, EventEmitter, ElementRef, Input, HostListener, Output } from '@angular/core';\n\nimport { FileUploader } from './file-uploader.class';\n\n@Directive({ selector: '[ng2FileSelect]' })\nexport class FileSelectDirective {\n  @Input() public uploader: FileUploader;\n  @Output() public onFileSelected: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n  protected element: ElementRef;\n\n  public constructor(element: ElementRef) {\n    this.element = element;\n  }\n\n  public getOptions(): any {\n    return this.uploader.options;\n  }\n\n  public getFilters(): any {\n    return {};\n  }\n\n  public isEmptyAfterSelection(): boolean {\n    return !!this.element.nativeElement.attributes.multiple;\n  }\n\n  @HostListener('change')\n  public onChange(): any {\n    let files = this.element.nativeElement.files;\n    let options = this.getOptions();\n    let filters = this.getFilters();\n\n    this.uploader.addToQueue(files, options, filters);\n    this.onFileSelected.emit(files);\n\n    if (this.isEmptyAfterSelection()) {\n      this.element.nativeElement.value = '';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/file-upload/file-select.directive.ts","import { FileLikeObject } from './file-like-object.class';\nimport { FileUploader, ParsedResponseHeaders, FileUploaderOptions } from './file-uploader.class';\nimport { FileChunk } from './file-chunk.class'\nexport class FileItem {\n  public file: FileLikeObject;\n  public _file: File;\n  public alias: string;\n  public url: string = '/';\n  public method: string;\n  public headers: any = [];\n  public withCredentials: boolean = true;\n  public formData: any = [];\n  public isReady: boolean = false;\n  public isUploading: boolean = false;\n  public isUploaded: boolean = false;\n  public isSuccess: boolean = false;\n  public isCancel: boolean = false;\n  public isError: boolean = false;\n  public progress: number = 0;\n  public index: number = void 0;\n  public _xhr: XMLHttpRequest;\n  public _form: any;\n  public _chunkUploaders: any = [];\n  public _fileChunks: FileChunk;\n  public _currentChunk: number = 0;\n  public _totalChunks: number = 0;\n\n  protected uploader: FileUploader;\n  protected some: File;\n  protected options: FileUploaderOptions;\n\n  public constructor(uploader: FileUploader, some: File, options: FileUploaderOptions) {\n    this.uploader = uploader;\n    this.some = some;\n    this.options = options;\n    this.file = new FileLikeObject(some);\n    this._file = some;\n    if (uploader.options) {\n      this.method = uploader.options.method || 'POST';\n      this.alias = uploader.options.itemAlias || 'file';\n    }\n    this.url = uploader.options.url;\n  }\n\n  public upload(): void {\n    try {\n      this.uploader.uploadItem(this);\n    } catch (e) {\n      this.uploader._onCompleteItem(this, '', 0, {});\n      this.uploader._onErrorItem(this, '', 0, {});\n    }\n  }\n  public createFileChunk(chunkSize: number): void{\n    this.fileChunks = new FileChunk(this._file,{byteStepSize:chunkSize});\n    this._currentChunk = this.fileChunks.currentChunk;\n    this._totalChunks = this.fileChunks.totalChunks;\n  }\n  public getNextChunk():any{\n    this.fileChunks.prepareNextChunk()\n    return this.fileChunks.getCurrentRawFileChunk();\n  }\n  public setIsUploading(val:boolean){\n    this.isUploading = val;\n    if(this.fileChunks){\n      this.fileChunks.setUploading(val)\n    }\n  }\n\n  public set fileChunks(val: FileChunk){\n    this._fileChunks = val;\n  }\n  public get fileChunks(): FileChunk{\n    return this._fileChunks;\n  }\n  public cancel(): void {\n    this.uploader.cancelItem(this);\n  }\n\n  public remove(): void {\n    this.uploader.removeFromQueue(this);\n  }\n\n  public onBeforeUpload(): void {\n    return void 0;\n  }\n\n  public onBuildForm(form: any): any {\n    return { form };\n  }\n\n  public onProgress(progress: number): any {\n    return { progress };\n  }\n\n  public onSuccess(response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { response, status, headers };\n  }\n\n  public onError(response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { response, status, headers };\n  }\n\n  public onCancel(response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { response, status, headers };\n  }\n\n  public onComplete(response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { response, status, headers };\n  }\n  public onCompleteChunk(response: string, status: number, headers: ParsedResponseHeaders): any {\n    return { response, status, headers };\n  }\n\n  public _onBeforeUpload(): void {\n    this.isReady = true;\n    this.isUploading = true;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.onBeforeUpload();\n  }\n\n  public _onBuildForm(form: any): void {\n    this.onBuildForm(form);\n  }\n\n  public _onProgress(progress: number): void {\n    this.progress = progress;\n    this.onProgress(progress);\n  }\n\n  public _onSuccess(response: string, status: number, headers: ParsedResponseHeaders): void {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = true;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 100;\n    this.index = void 0;\n    this.onSuccess(response, status, headers);\n  }\n\n  public _onError(response: string, status: number, headers: ParsedResponseHeaders): void {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = true;\n    this.progress = 0;\n    this.index = void 0;\n    this.onError(response, status, headers);\n  }\n\n  public _onCancel(response: string, status: number, headers: ParsedResponseHeaders): void {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = true;\n    this.isError = false;\n    this.progress = 0;\n    this.index = void 0;\n    this.onCancel(response, status, headers);\n  }\n\n  public _onComplete(response: string, status: number, headers: ParsedResponseHeaders): void {\n    this.onComplete(response, status, headers);\n\n    if (this.uploader.options.removeAfterUpload) {\n      this.remove();\n    }\n  }\n  public _onCompleteChunk(response: string, status: number, headers: ParsedResponseHeaders): void{\n    this._onCompleteChunkCallnext();\n    this.onCompleteChunk(response, status, headers);\n  }\n  public _onCompleteChunkCallnext(): void{\n\n  }\n  public _prepareToUploading(): void {\n    this.index = this.index || ++this.uploader._nextIndex;\n    this.isReady = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/file-upload/file-item.class.ts","import { Directive, EventEmitter, ElementRef, HostListener, Input, Output } from '@angular/core';\n\nimport { FileUploader, FileUploaderOptions } from './file-uploader.class';\n\n@Directive({ selector: '[ng2FileDrop]' })\nexport class FileDropDirective {\n  @Input() public uploader: FileUploader;\n  @Output() public fileOver: EventEmitter<any> = new EventEmitter();\n  @Output() public onFileDrop: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n  protected element: ElementRef;\n\n  public constructor(element: ElementRef) {\n    this.element = element;\n  }\n\n  public getOptions(): FileUploaderOptions {\n    return this.uploader.options;\n  }\n\n  public getFilters(): any {\n    return {};\n  }\n\n  @HostListener('drop', [ '$event' ])\n  public onDrop(event: any): void {\n    let transfer = this._getTransfer(event);\n    if (!transfer) {\n      return;\n    }\n\n    let options = this.getOptions();\n    let filters = this.getFilters();\n    this._preventAndStop(event);\n    this.uploader.addToQueue(transfer.files, options, filters);\n    this.fileOver.emit(false);\n    this.onFileDrop.emit(transfer.files);\n  }\n\n  @HostListener('dragover', [ '$event' ])\n  public onDragOver(event: any): void {\n    let transfer = this._getTransfer(event);\n    if (!this._haveFiles(transfer.types)) {\n      return;\n    }\n\n    transfer.dropEffect = 'copy';\n    this._preventAndStop(event);\n    this.fileOver.emit(true);\n  }\n\n  @HostListener('dragleave', [ '$event' ])\n  public onDragLeave(event: any): any {\n    if ((this as any).element) {\n      if (event.currentTarget === (this as any).element[ 0 ]) {\n        return;\n      }\n    }\n\n    this._preventAndStop(event);\n    this.fileOver.emit(false);\n  }\n\n  protected _getTransfer(event: any): any {\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n  }\n\n  protected _preventAndStop(event: any): any {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  protected _haveFiles(types: any): any {\n    if (!types) {\n      return false;\n    }\n\n    if (types.indexOf) {\n      return types.indexOf('Files') !== -1;\n    } else if (types.contains) {\n      return types.contains('Files');\n    } else {\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/file-upload/file-drop.directive.ts","export * from  './file-upload/file-select.directive';\nexport * from  './file-upload/file-drop.directive';\nexport * from  './file-upload/file-uploader.class';\nexport * from './file-upload/file-item.class';\nexport * from './file-upload/file-like-object.class';\n\nexport { FileUploadModule } from './file-upload/file-upload.module';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/index.ts","export class FileChunk {\n\tpublic stepSize:number = 1024 * 1024 * 3;\n\tpublic rawFile:any = null;\n\tpublic uploadProgress:number = null;\n\tpublic uploading:boolean = null;\n\tpublic uploadComplete:boolean = null;\n\tpublic byteStepSize:number = null;\n\tpublic totalSize:number = null;\n\tpublic startByte:number = null;\n\tpublic endByte:number = null;\n\tpublic currentChunk:number = 0;\n\tpublic totalChunks:number = null;\n\tpublic uniqueIdentifier:string = null;\n\tpublic totalSent:number = null;\n\tpublic extraData:any = {};\n\tconstructor(rawFile:any, options:any = {}) {\n\n\t\tif (typeof options !== 'undefined'){\n\t\t\tif (typeof options.byteStepSize !== 'undefined'){\n\t\t\t\tthis.setByteStepSize(options.byteStepSize);\n\t\t\t}\n\t\t}\n\t\tthis.setRawFile(rawFile)\n\n\t\tthis.setRawFile(rawFile);\n\t\tthis.setUploadProgress(0);\n\t\tthis.setUploading(false);\n\t\tthis.setUploadComplete(false);\n\t\tthis.setTotalSize(this.getRawFile().size);\n\t\tthis.setStartByte(0);\n\t\tthis.setEndByte(this.getByteStepSize());\n\t\tthis.setCurrentChunk(0);\n\t\tif (!this.getBrowserSliceMethod()){\n\t\t\tthis.setTotalChunks(1);\n\t\t}\n\t\telse{\n\t\t\tthis.setTotalChunks(Math.ceil(this.totalSize / this.byteStepSize));\t\n\t\t}\n\t\tthis.setUniqueIdenfier(this.generateUniqueIdentifier());\n\t\tthis.setTotalSent(0);\n\t}\n\n\tpublic setExtraData(index:any, value:any){\n\t\tthis.extraData[index] = value;\n\t}\n\n\tpublic getExtraData(index:any){\n\t\treturn this.extraData[index];\n\t}\n\t\n\t//getters and setters\n\tpublic setProgress(v:any){\n\t\tthis.uploadProgress = v;\n\t}\n\n\tpublic getProgress(){\n\t\treturn this.uploadProgress;\n\t}\n\n\tpublic setUploading(v:boolean){\n\t\tthis.uploading = v;\n\t}\n\n\tpublic getUploading(){\n\t\treturn this.uploading;\n\t}\n\n\tpublic getUploadComplete(){\n\t\treturn this.uploadComplete;\n\t}\n\n\tpublic setUploadComplete(v:boolean){\n\t\tthis.uploadComplete = v;\n\t}\n\n\tpublic setUploadProgress(v:number){\n\t\tthis.uploadProgress = v;\n\t}\n\n\tpublic getUploadProgress(){\n\t\treturn this.uploadProgress;\n\t}\n\n\tpublic getStartByte(){\n\t\treturn this.startByte;\n\t}\n\n\tpublic setStartByte(v:number){\n\t\tthis.startByte = v;\n\t}\n\n\tpublic getEndByte(){\n\t\treturn this.endByte;\n\t}\n\n\tpublic setEndByte(v:number){\n\t\tthis.endByte = v;\n\t}\n\n\tpublic getByteStepSize(){\n\t\treturn this.byteStepSize;\n\t}\n\n\tpublic setByteStepSize(v:number){\n\t\tthis.byteStepSize = v;\n\t}\n\n\tpublic setTotalSize(v:number){\n\t\tthis.totalSize = v;\n\t}\n\n\tpublic getTotalSize(){\n\t\treturn this.totalSize;\n\t}\n\n\tpublic getRawFile(){\n\t\treturn this.rawFile;\n\t}\n\n\tpublic setRawFile(v:File){\n\t\tthis.rawFile = v;\n\t}\n\n\tpublic getCurrentChunk(){\n\t\treturn this.currentChunk;\n\t}\n\n\tpublic setCurrentChunk(v:number){\n\t\tthis.currentChunk = v;\n\t}\n\n\tpublic getTotalChunks(){\n\t\treturn this.totalChunks;\n\t}\n\n\tpublic setTotalChunks(v:number){\n\t\tthis.totalChunks = v;\n\t}\n\n\tpublic setUniqueIdenfier(v:string){\n\t\tthis.uniqueIdentifier = v;\n\t}\n\n\tpublic getUniqueIdenfier(){\n\t\treturn this.uniqueIdentifier;\n\t}\n\n\tpublic getRawFileExtension(){\n\t\tconst extension = this.getRawFileName().split('.');\n\t\treturn extension[extension.length - 1];\n\t}\n\n\tpublic getRawFileName(){\n\t\treturn this.getRawFile().name;\n\t}\n\n\tpublic getContentType(){\n\t\treturn this.getRawFile().type;\n\t}\n\n\tpublic getTotalSent(){\n\t\treturn this.totalSent;\n\t}\n\n\tpublic setTotalSent(v:number){\n\t\tthis.totalSent = v;\n\t}\n\n\tpublic getCurrentRawFileChunk(){\n\t\tif (!this.getBrowserSliceMethod()){\n\t\t\treturn this.getRawFile();\n\t\t}\n\t\telse{\n\t\t\treturn this.getRawFile()[this.getBrowserSliceMethod()](this.getStartByte(), this.getEndByte());\n\t\t}\n\t}\n\n\tpublic retrocedeChunk(){\n\t\tif (!this.getBrowserSliceMethod()){\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.setEndByte(this.getStartByte());\n\t\tthis.setStartByte(this.getStartByte() - this.getByteStepSize());\n\t\tthis.setCurrentChunk(this.getCurrentChunk() - 1);\n\n\t\tif (this.getTotalSent() != 0){\n\t\t\tthis.setTotalSent(this.getTotalSent() - this.getByteStepSize());\n\t\t}\n\t}\n\n\tpublic prepareNextChunk(){\n\t\tif (!this.getBrowserSliceMethod()){\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.getEndByte() > this.getTotalSize()){ //finished\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.setStartByte(this.getEndByte());\n\t\tthis.setEndByte(this.getEndByte() + this.getByteStepSize());\n\t\tthis.setCurrentChunk(this.getCurrentChunk() + 1);\n\n\t\treturn true;\n\t}\n\n\tpublic getBrowserSliceMethod():string{\n\t\tif (this.rawFile && typeof this.rawFile !== 'undefined'){\n\t        if (this.rawFile.slice && typeof this.rawFile.slice == 'function'){\n\t        \treturn 'slice';\n\t        }\n\t        else if(this.rawFile.mozSlice && typeof this.rawFile.mozSlice == 'function'){\n\t            return 'mozSlice';\n\t        }\n\t        else if(this.rawFile.webkitSlice && typeof this.rawFile.webkitSlice == 'function'){\n\t            return 'webkitSlice';\n\t        }\n\t    }\n\t    else{\n\t    \treturn null;\n\t    }\n\t}//getBrowserSliceMethod() ends here\n\n\n\tpublic generateUniqueIdentifier():string{\n\t    var d = new Date().getTime();\n\n\t    if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n\t        d += performance.now(); //use high-precision timer if available\n\t    }\n\t    \n\t    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t        var r = (d + Math.random() * 16) % 16 | 0;\n\t        d = Math.floor(d / 16);\n\t        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n\t    });\n\t}\n\n}\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/file-upload/file-chunk.class.ts","import { FileLikeObject } from \"../ng2-file-uploading-with-chunk\";\n\nexport class FileType {\n  /*  MS office  */\n  public static mime_doc: string[] = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n  ];\n  public static mime_xsl: string[] = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n  ];\n  public static mime_ppt: string[] = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n  ];\n\n  /* PSD */\n  public static mime_psd: string[] = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n  ];\n\n  /* Compressed files */\n  public static mime_compress: string[] = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n  ];\n\n  public static getMimeClass(file: FileLikeObject): string {\n    let mimeClass = 'application';\n    if (this.mime_psd.indexOf(file.type) !== -1) {\n      mimeClass = 'image';\n    } else if (file.type.match('image.*')) {\n      mimeClass = 'image';\n    } else if (file.type.match('video.*')) {\n      mimeClass = 'video';\n    } else if (file.type.match('audio.*')) {\n      mimeClass = 'audio';\n    } else if (file.type === 'application/pdf') {\n      mimeClass = 'pdf';\n    } else if (this.mime_compress.indexOf(file.type) !== -1) {\n      mimeClass = 'compress';\n    } else if (this.mime_doc.indexOf(file.type) !== -1) {\n      mimeClass = 'doc';\n    } else if (this.mime_xsl.indexOf(file.type) !== -1) {\n      mimeClass = 'xls';\n    } else if (this.mime_ppt.indexOf(file.type) !== -1) {\n      mimeClass = 'ppt';\n    }\n    if (mimeClass === 'application') {\n      mimeClass = this.fileTypeDetection(file.name);\n    }\n\n    return mimeClass;\n  }\n\n  public static fileTypeDetection(inputFilename: string): string {\n    let types: { [ key: string ]: string } = {\n      'jpg': 'image',\n      'jpeg': 'image',\n      'tif': 'image',\n      'psd': 'image',\n      'bmp': 'image',\n      'png': 'image',\n      'nef': 'image',\n      'tiff': 'image',\n      'cr2': 'image',\n      'dwg': 'image',\n      'cdr': 'image',\n      'ai': 'image',\n      'indd': 'image',\n      'pin': 'image',\n      'cdp': 'image',\n      'skp': 'image',\n      'stp': 'image',\n      '3dm': 'image',\n      'mp3': 'audio',\n      'wav': 'audio',\n      'wma': 'audio',\n      'mod': 'audio',\n      'm4a': 'audio',\n      'compress': 'compress',\n      'zip': 'compress',\n      'rar': 'compress',\n      '7z': 'compress',\n      'lz': 'compress',\n      'z01': 'compress',\n      'bz2': 'compress',\n      'gz': 'compress',\n      'pdf': 'pdf',\n      'xls': 'xls',\n      'xlsx': 'xls',\n      'ods': 'xls',\n      'mp4': 'video',\n      'avi': 'video',\n      'wmv': 'video',\n      'mpg': 'video',\n      'mts': 'video',\n      'flv': 'video',\n      '3gp': 'video',\n      'vob': 'video',\n      'm4v': 'video',\n      'mpeg': 'video',\n      'm2ts': 'video',\n      'mov': 'video',\n      'doc': 'doc',\n      'docx': 'doc',\n      'eps': 'doc',\n      'txt': 'doc',\n      'odt': 'doc',\n      'rtf': 'doc',\n      'ppt': 'ppt',\n      'pptx': 'ppt',\n      'pps': 'ppt',\n      'ppsx': 'ppt',\n      'odp': 'ppt'\n    };\n\n    let chunks = inputFilename.split('.');\n    if (chunks.length < 2) {\n      return 'application';\n    }\n    let extension = chunks[ chunks.length - 1 ].toLowerCase();\n    if (types[ extension ] === undefined) {\n      return 'application';\n    } else {\n      return types[ extension ];\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/file-upload/file-type.class.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileDropDirective } from './file-drop.directive';\nimport { FileSelectDirective } from './file-select.directive';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ FileDropDirective, FileSelectDirective ],\n  exports: [ FileDropDirective, FileSelectDirective ]\n})\nexport class FileUploadModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/file-upload/file-upload.module.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":[\"ng\",\"common\"],\"commonjs\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"amd\":\"@angular/common\"}\n// module id = 10\n// module chunks = 0 1"],"sourceRoot":""}